<root>
    <item name='org.apache.logging.log4j.core.async.RingBufferLogEventHandler void onEvent(java.lang.Object, long, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.logging.log4j.core.async.AsyncLoggerConfig.RootLogger org.apache.logging.log4j.core.config.LoggerConfig createLogger(java.lang.String, java.lang.String, java.lang.String, org.apache.logging.log4j.core.config.AppenderRef[], org.apache.logging.log4j.core.config.Property[], org.apache.logging.log4j.core.config.Configuration, org.apache.logging.log4j.core.Filter)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.logging.log4j.core.async.RingBufferLogEventHandler void onEvent(org.apache.logging.log4j.core.async.RingBufferLogEvent, long, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.logging.log4j.core.async.RingBufferLogEvent FACTORY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.logging.log4j.core.async.AsyncLoggerContextSelector org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String, java.lang.ClassLoader, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.logging.log4j.core.async.RingBufferLogEventTranslator void translateTo(org.apache.logging.log4j.core.async.RingBufferLogEvent, long) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.logging.log4j.core.async.AsyncLoggerContext org.apache.logging.log4j.core.Logger newInstance(org.apache.logging.log4j.core.LoggerContext, java.lang.String, org.apache.logging.log4j.message.MessageFactory)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.logging.log4j.core.async.AsyncLoggerContext org.apache.logging.log4j.core.Logger newInstance(org.apache.logging.log4j.core.LoggerContext, java.lang.String, org.apache.logging.log4j.message.MessageFactory) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.logging.log4j.core.async.DaemonThreadFactory java.lang.Thread newThread(java.lang.Runnable)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.logging.log4j.core.async.AsyncLogger void actualAsyncLog(org.apache.logging.log4j.core.async.RingBufferLogEvent) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.logging.log4j.core.async.AsyncLogger AsyncLogger(org.apache.logging.log4j.core.LoggerContext, java.lang.String, org.apache.logging.log4j.message.MessageFactory) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.logging.log4j.core.async.RingBufferLogEventTranslator void translateTo(java.lang.Object, long) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.logging.log4j.core.async.AsyncLoggerConfig void callAppenders(org.apache.logging.log4j.core.LogEvent) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.logging.log4j.core.async.AsyncLoggerContextSelector org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String, java.lang.ClassLoader, boolean, java.net.URI)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
