<root>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder putShorts(short[], int, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator akka.util.ByteIterator drop(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Helpers$ java.lang.String base64(long, java.lang.StringBuilder) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings akka.util.ByteIterator iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder..anonfun.putLongPart.1..anonfun.apply.2 2(akka.util.ByteStringBuilder..anonfun.putLongPart.1, byte[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder scala.collection.generic.Growable $plus$eq(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.getBytes.1 1(akka.util.ByteIterator.MultiByteArrayIterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.CompactByteString$ akka.util.CompactByteString empty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.foreach.mZc.sp.1 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.CompactByteString$ akka.util.CompactByteString apply(scala.collection.Seq&lt;java.lang.Object&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString$ akka.util.ByteString apply(byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings..anonfun.compact.1 void apply(akka.util.ByteString.ByteString1) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator scala.Tuple2&lt;akka.util.ByteIterator,akka.util.ByteIterator&gt; duplicate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Helpers.ConfigOps$ MODULE$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.foreach.mBc.sp.1 void apply(akka.util.ByteIterator.ByteArrayIterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.foreach.mZc.sp.1 void apply(akka.util.ByteIterator.ByteArrayIterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder..anonfun.putShorts.1 void apply(java.nio.ByteBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.5 5(akka.util.SubclassifiedIndex&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator akka.util.ByteIterator getInts(int[], java.nio.ByteOrder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder..anonfun.putFloats.1 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Collections.PartialImmutableValuesIterable To apply(From) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator akka.util.ByteIterator.ByteArrayIterator takeWhile(scala.Function1&lt;java.lang.Object,java.lang.Object&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator scala.collection.Iterator takeWhile(scala.Function1)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString akka.util.ByteString fromString(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString akka.util.ByteString $plus$plus(akka.util.ByteString) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder fillArray(int, scala.Function2&lt;byte[],java.lang.Object,scala.runtime.BoxedUnit&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteString1 java.lang.String decodeString(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anon.2 2(akka.util.ByteIterator.MultiByteArrayIterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Helpers java.util.regex.Pattern makePattern(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.4 scala.collection.immutable.Seq&lt;scala.Tuple2&lt;K,scala.collection.immutable.Set&lt;V&gt;&gt;&gt; apply(akka.util.SubclassifiedIndex.Nonroot&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.innerFindSubKeys.1..anonfun.apply.1 boolean apply(akka.util.SubclassifiedIndex.Nonroot&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString akka.util.ByteString empty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder scala.collection.mutable.Builder $plus$eq(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings$ akka.util.ByteString apply(akka.util.ByteString.ByteString1, akka.util.ByteString.ByteString1)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings$ akka.util.ByteString apply(scala.collection.immutable.Vector&lt;akka.util.ByteString.ByteString1&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteString1C akka.util.ByteIterator.ByteArrayIterator iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.WildcardTree java.lang.String productPrefix()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Index..anonfun.foreach.1..anonfun.apply.1 1(akka.util.Index&lt;K,V&gt;..anonfun.foreach.1) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings$ akka.util.ByteString apply(akka.util.ByteString.ByteStrings, akka.util.ByteString.ByteString1) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.WildcardTree akka.util.WildcardTree&lt;T&gt; insert(scala.collection.Iterator&lt;java.lang.String&gt;, T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator akka.util.ByteIterator take(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString akka.util.ByteString fromArray(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ReentrantGuard T withGuard(scala.Function0&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString akka.util.ByteStringBuilder newBuilder()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder putByte(byte)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder..anonfun.putDoubles.1 void apply(java.nio.ByteBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.WildcardTree akka.util.WildcardTree&lt;T&gt; apply(scala.Option&lt;T&gt;, scala.collection.immutable.Map&lt;java.lang.String,akka.util.WildcardTree&lt;T&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteString1 scala.collection.Iterator iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteString1C akka.util.ByteIterator iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Index..anonfun.values.1 void apply(java.util.concurrent.ConcurrentSkipListSet&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder..anonfun.putDoubles.1 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Reflect java.lang.reflect.Type findMarker(java.lang.Class&lt;?&gt;, java.lang.Class&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Helpers.Requiring$ int hashCode$extension(A) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString scala.Tuple2&lt;akka.util.ByteString,akka.util.ByteString&gt; span(scala.Function1&lt;java.lang.Object,java.lang.Object&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Helpers.ConfigOps$ int hashCode$extension(com.typesafe.config.Config) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Helpers$ java.util.Comparator&lt;T&gt; identityHashComparator(java.util.Comparator&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator java.io.InputStream asInputStream()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Timeout$ akka.util.Timeout apply(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Timeout akka.util.Timeout apply(scala.concurrent.duration.FiniteDuration)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator akka.util.ByteIterator getFloats(float[], int, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.5 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Timeout$ akka.util.Timeout apply(scala.concurrent.duration.FiniteDuration)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings$ akka.util.ByteString apply(akka.util.ByteString.ByteStrings, akka.util.ByteString.ByteString1) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.innerFindSubKeys.1 java.lang.Object apply(java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.WildcardTree$ akka.util.WildcardTree&lt;T&gt; apply(scala.Option&lt;T&gt;, scala.collection.immutable.Map&lt;java.lang.String,akka.util.WildcardTree&lt;T&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.getLongs.2 2(akka.util.ByteIterator.MultiByteArrayIterator, java.nio.ByteOrder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder..anonfun.putFloats.1 void apply(java.nio.ByteBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.foreach.mIc.sp.1 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder..anonfun.putLongs.1 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator akka.util.ByteIterator getFloats(float[], int, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings akka.util.ByteIterator.MultiByteArrayIterator iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator akka.util.ByteIterator dropWhile(scala.Function1&lt;java.lang.Object,java.lang.Object&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='akka.util.CompactByteString$ akka.util.CompactByteString apply(scala.collection.Seq&lt;java.lang.Object&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Reflect java.lang.reflect.Type findMarker(java.lang.Class&lt;?&gt;, java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator$ akka.util.ByteIterator.ByteArrayIterator apply(byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Timeout akka.util.Timeout copy(scala.concurrent.duration.FiniteDuration)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Reflect..anonfun.6 boolean apply(java.lang.reflect.Constructor&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator akka.util.ByteIterator.ByteArrayIterator getInts(int[], int, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder putDoubles(double[], java.nio.ByteOrder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.foreach.mIc.sp.1 void apply(akka.util.ByteIterator.ByteArrayIterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.innerFindSubKeys.1 scala.collection.immutable.Set&lt;K&gt; apply(scala.collection.immutable.Set&lt;K&gt;, akka.util.SubclassifiedIndex.Nonroot&lt;K,V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.getInts.2 2(akka.util.ByteIterator.MultiByteArrayIterator, java.nio.ByteOrder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.innerFindSubKeys.1 akka.util.SubclassifiedIndex akka$util$SubclassifiedIndex$$anonfun$$$outer()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Helpers.Requiring$ A requiring$extension1(A, scala.Function1&lt;A,java.lang.Object&gt;, scala.Function0&lt;java.lang.Object&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Reflect..anonfun.6 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString$ akka.util.ByteString fromString(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex.Nonroot..anonfun.1 scala.collection.immutable.Seq&lt;scala.Tuple2&lt;K,scala.collection.immutable.Set&lt;V&gt;&gt;&gt; apply(akka.util.SubclassifiedIndex.Nonroot&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator akka.util.ByteIterator.MultiByteArrayIterator clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteString1C scala.collection.Iterator iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator akka.util.ByteIterator takeWhile(scala.Function1)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString akka.util.ByteString mapI(scala.Function1&lt;java.lang.Object,java.lang.Object&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder putInt(int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings scala.collection.Iterator iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator akka.util.ByteIterator clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString$ akka.util.ByteString fromString(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator scala.collection.Iterator drop(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.1 akka.util.ByteIterator.ByteArrayIterator apply(akka.util.ByteIterator.ByteArrayIterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator int copyToBuffer(java.nio.ByteBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='akka.util.WildcardTree..anonfun.1 java.lang.Object apply()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString akka.util.ByteString fromByteBuffer(java.nio.ByteBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SerializedSuspendableExecutionContext$ MODULE$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder..anonfun.putLongs.1 void apply(java.nio.ByteBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Collections$ MODULE$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder scala.collection.generic.Growable $plus$plus$eq(scala.collection.TraversableOnce)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator$ akka.util.ByteIterator.MultiByteArrayIterator empty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SerializedSuspendableExecutionContext java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.getDoubles.2 2(akka.util.ByteIterator.MultiByteArrayIterator, java.nio.ByteOrder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.CompactByteString$ MODULE$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteString1 akka.util.ByteIterator.ByteArrayIterator iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator akka.util.ByteIterator.ByteArrayIterator getFloats(float[], int, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder fillArray(int, scala.Function2&lt;byte[],java.lang.Object,scala.runtime.BoxedUnit&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings$ akka.util.ByteString apply(akka.util.ByteString.ByteString1, akka.util.ByteString.ByteStrings)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator scala.Tuple2&lt;akka.util.ByteIterator,akka.util.ByteIterator&gt; span(scala.Function1&lt;java.lang.Object,java.lang.Object&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator akka.util.ByteIterator.MultiByteArrayIterator getLongs(long[], int, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex.Nonroot..anonfun.2 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteString1$ akka.util.ByteString.ByteString1 empty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString akka.util.ByteString $plus$plus(akka.util.ByteString)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='akka.util.Reflect$ java.lang.reflect.Type findMarker(java.lang.Class&lt;?&gt;, java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.3 scala.collection.immutable.Seq&lt;scala.Tuple2&lt;K,scala.collection.immutable.Set&lt;V&gt;&gt;&gt; apply(akka.util.SubclassifiedIndex.Nonroot&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Index..anonfun.values.1..anonfun.apply.2 2(akka.util.Index&lt;K,V&gt;..anonfun.values.1) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator akka.util.ByteIterator.MultiByteArrayIterator akka$util$ByteIterator$MultiByteArrayIterator$$normalize()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder putLongs(long[], int, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Timeout akka.util.Timeout zero()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator akka.util.ByteIterator getInts(int[], int, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Crypt java.lang.String hexify(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.integrate.2 scala.Tuple2&lt;K,scala.collection.immutable.Set&lt;V&gt;&gt; apply(akka.util.SubclassifiedIndex.Nonroot&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator akka.util.ByteIterator getLongs(long[], int, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.BoundedBlockingQueue boolean offer(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.getShorts.2 2(akka.util.ByteIterator.MultiByteArrayIterator, java.nio.ByteOrder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteString1 akka.util.ByteString $plus$plus(akka.util.ByteString)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteString1 ByteString1(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Timeout$ akka.util.Timeout zero()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder..anonfun.putInt.1 void apply(byte[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.integrate.1 akka.util.SubclassifiedIndex.Nonroot&lt;K,V&gt; apply(K)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SerializedSuspendableExecutionContext..anonfun.1 1(akka.util.SerializedSuspendableExecutionContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.foreach.mJc.sp.1 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Reflect..anonfun.6..anonfun.apply.1 boolean apply(scala.Tuple2&lt;java.lang.Class&lt;?&gt;,java.lang.Object&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Crypt java.lang.String hex()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.1 java.lang.Object apply(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator akka.util.ByteIterator getLongs(long[], int, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='akka.util.ByteString$ akka.util.ByteString apply(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.BoxedType$ java.lang.Class&lt;?&gt; apply(java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString scala.collection.Iterator iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator akka.util.ByteIterator.MultiByteArrayIterator take(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator java.io.InputStream asInputStream()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='akka.util.Switch T locked(scala.Function0&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.getDoubles.1 1(akka.util.ByteIterator.MultiByteArrayIterator, java.nio.ByteOrder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator akka.util.ByteIterator.ByteArrayIterator dropWhile(scala.Function1&lt;java.lang.Object,java.lang.Object&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator akka.util.ByteIterator dropWhile(scala.Function1)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString akka.util.ByteString fromArray(byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.CompactByteString$ akka.util.CompactByteString apply(scala.collection.Seq&lt;T&gt;, scala.math.Integral&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Reflect$ java.lang.reflect.Type findMarker(java.lang.Class&lt;?&gt;, java.lang.Class&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator scala.collection.Iterator dropWhile(scala.Function1)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Helpers java.lang.StringBuilder base64$default$2()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings$ akka.util.ByteString apply(akka.util.ByteString.ByteString1, akka.util.ByteString.ByteString1) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder putInts(int[], int, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator akka.util.ByteIterator getDoubles(double[], int, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator akka.util.ByteString toByteString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.1 akka.util.ByteIterator.ByteArrayIterator apply(akka.util.ByteIterator.ByteArrayIterator)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.innerFindSubKeys.1..anonfun.apply.1 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator int copyToBuffer(java.nio.ByteBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator scala.collection.Iterator take(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder putLongs(long[], java.nio.ByteOrder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator akka.util.ByteIterator.ByteArrayIterator getDoubles(double[], int, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.3 java.lang.Object apply(java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator akka.util.ByteIterator.MultiByteArrayIterator drop(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.WildcardTree akka.util.WildcardTree&lt;T&gt; insert(scala.collection.Iterator&lt;java.lang.String&gt;, T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.HashCode$ MODULE$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator..anon.1 1(akka.util.ByteIterator.ByteArrayIterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex.Nonroot..anonfun.1 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator..anonfun.getLongPart.1 1(akka.util.ByteIterator, scala.runtime.LongRef) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings$ akka.util.ByteString apply(akka.util.ByteString.ByteString1, akka.util.ByteString.ByteString1) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator akka.util.ByteIterator.MultiByteArrayIterator dropWhile(scala.Function1&lt;java.lang.Object,java.lang.Object&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator akka.util.ByteIterator getDoubles(double[], java.nio.ByteOrder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Collections.PartialImmutableValuesIterable scala.collection.Iterator&lt;To&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Timeout akka.util.Timeout apply(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder putFloat(float, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder putShorts(short[], java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString akka.util.CompactByteString compact()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='akka.util.Crypt java.lang.String digest(byte[], java.security.MessageDigest) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator akka.util.ByteString toByteString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='akka.util.Reflect$ T instantiate(java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.BoundedBlockingQueue java.util.concurrent.locks.ReentrantLock lock()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString java.lang.String decodeString(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='akka.util.CompactByteString$ akka.util.CompactByteString apply(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder..anonfun.putShorts.1 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Index..anonfun.foreach.1 void apply(java.util.Map.Entry&lt;K,java.util.concurrent.ConcurrentSkipListSet&lt;V&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Timeout$ MODULE$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.CompactByteString$ akka.util.CompactByteString fromArray(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator akka.util.ByteIterator getDoubles(double[], int, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='akka.util.SerializedSuspendableExecutionContext$ akka.util.SerializedSuspendableExecutionContext apply(int, scala.concurrent.ExecutionContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.WildcardTree$ akka.util.WildcardTree&lt;T&gt; apply()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings..anonfun.iterator.1 akka.util.ByteIterator.ByteArrayIterator apply(akka.util.ByteString.ByteString1)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString..anon.2 akka.util.ByteStringBuilder apply(scala.collection.TraversableOnce&lt;java.lang.Object&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.removeValue.1 scala.Tuple2&lt;K,scala.collection.immutable.Set&lt;V&gt;&gt; apply(scala.Tuple2&lt;K,scala.collection.immutable.Set&lt;V&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString$ akka.util.ByteString apply(scala.collection.Seq&lt;T&gt;, scala.math.Integral&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteString1 akka.util.ByteIterator iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings..anonfun.iterator.1 java.lang.Object apply(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator akka.util.ByteIterator.MultiByteArrayIterator takeWhile(scala.Function1&lt;java.lang.Object,java.lang.Object&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString akka.util.ByteString fromString(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.BoxedType java.lang.Class&lt;?&gt; apply(java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Reflect$ T instantiate(java.lang.Class&lt;T&gt;, scala.collection.immutable.Seq&lt;java.lang.Object&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator akka.util.ByteIterator takeWhile(scala.Function1)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder..anon.1 1(akka.util.ByteStringBuilder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Collections.PartialImmutableValuesIterable..anon.1 1(akka.util.Collections.PartialImmutableValuesIterable&lt;From,To&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.5 scala.collection.immutable.Seq&lt;scala.Tuple2&lt;K,scala.collection.immutable.Set&lt;V&gt;&gt;&gt; apply(akka.util.SubclassifiedIndex.Nonroot&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteString1$ akka.util.ByteString.ByteString1 apply(byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Helpers java.lang.String base64chars()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder java.io.OutputStream asOutputStream()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.integrate.1 1(akka.util.SubclassifiedIndex&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.foreach.mJc.sp.1 void apply(akka.util.ByteIterator.ByteArrayIterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator akka.util.ByteIterator.MultiByteArrayIterator getShorts(short[], int, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator$ MODULE$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.foreach.mBc.sp.1 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString akka.util.ByteIterator iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.6 boolean apply(akka.util.SubclassifiedIndex.Nonroot&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='akka.util.ByteIterator akka.util.ByteIterator $plus$plus(scala.collection.TraversableOnce&lt;java.lang.Object&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder putLongPart(long, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.integrate.2 java.lang.Object apply(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings$ akka.util.ByteString apply(akka.util.ByteString.ByteStrings, akka.util.ByteString.ByteStrings) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.BoxedType$ MODULE$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator akka.util.ByteIterator getInts(int[], int, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='akka.util.ByteString.ByteStrings..anonfun.asByteBuffers.1 java.nio.ByteBuffer apply(akka.util.ByteString.ByteString1) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Helpers$ MODULE$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.3 3(akka.util.SubclassifiedIndex&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator akka.util.ByteIterator $plus$plus(scala.collection.TraversableOnce&lt;java.lang.Object&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.getFloats.1 1(akka.util.ByteIterator.MultiByteArrayIterator, java.nio.ByteOrder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings$ akka.util.ByteString apply(scala.collection.immutable.Vector&lt;akka.util.ByteString.ByteString1&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.BoundedBlockingQueue..anon.1 1(akka.util.BoundedBlockingQueue&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.innerFindValues.1 scala.collection.immutable.Set&lt;V&gt; apply(scala.collection.immutable.Set&lt;V&gt;, akka.util.SubclassifiedIndex.Nonroot&lt;K,V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString$ akka.util.ByteString fromByteBuffer(java.nio.ByteBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator akka.util.ByteIterator.MultiByteArrayIterator getBytes(byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings$ akka.util.ByteString apply(akka.util.ByteString.ByteStrings, akka.util.ByteString.ByteStrings) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.CompactByteString akka.util.CompactByteString empty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings akka.util.CompactByteString compact()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder putBytes(byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder putByteArrayUnsafe(byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings..anonfun.compact.1 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.innerFindSubKeys.1..anonfun.apply.1 1(akka.util.SubclassifiedIndex&lt;K,V&gt;..anonfun.innerFindSubKeys.1) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Reflect..anonfun.6..anonfun.apply.1 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteString1C java.lang.String decodeString(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Helpers$ java.lang.StringBuilder base64$default$2()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteString1$ akka.util.ByteString.ByteString1 apply(byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString scala.collection.generic.CanBuildFrom&lt;scala.collection.TraversableOnce&lt;java.lang.Object&gt;,java.lang.Object,akka.util.ByteString&gt; canBuildFrom()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteString1C akka.util.ByteString.ByteString1 toByteString1()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder $plus$eq(byte)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.removeValue.1 1(akka.util.SubclassifiedIndex&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.foreach.mFc.sp.1 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString scala.collection.mutable.Builder newBuilder()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.removeValue.1 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.foreach.mFc.sp.1 void apply(akka.util.ByteIterator.ByteArrayIterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.CompactByteString akka.util.CompactByteString fromArray(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder putInts(int[], java.nio.ByteOrder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.CompactByteString$ akka.util.CompactByteString apply(java.nio.ByteBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Helpers$ java.lang.String base64chars()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString$ akka.util.ByteString apply(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString akka.util.ByteString fromArray(byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex akka.util.SubclassifiedIndex&lt;K,V&gt; root()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder..anonfun.putLong.1 java.lang.Object apply(java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Helpers java.util.Comparator&lt;T&gt; identityHashComparator(java.util.Comparator&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString$ akka.util.ByteString apply(scala.collection.Seq&lt;T&gt;, scala.math.Integral&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.innerFindSubKeys.1 1(akka.util.SubclassifiedIndex&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Helpers.Requiring$ MODULE$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator akka.util.ByteIterator drop(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString$ akka.util.ByteString apply(java.nio.ByteBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.3 int apply(int, akka.util.ByteIterator.ByteArrayIterator) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Timeout$ akka.util.Timeout longToTimeout(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.HashCode$ int hash(int, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder putDouble(double, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings$ int compare(akka.util.ByteString, akka.util.ByteString) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.CompactByteString$ akka.util.CompactByteString apply(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteString1C akka.util.ByteString $plus$plus(akka.util.ByteString) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings..anonfun.iterator.1 akka.util.ByteIterator.ByteArrayIterator apply(akka.util.ByteString.ByteString1) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Helpers.Requiring A requiring(scala.Function1&lt;A,java.lang.Object&gt;, scala.Function0&lt;java.lang.Object&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings akka.util.ByteString $plus$plus(akka.util.ByteString) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.CompactByteString$ akka.util.CompactByteString apply(byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder putBytes(byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator scala.collection.Iterator takeWhile(scala.Function1)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='akka.util.ByteString.ByteStrings$ int compare(akka.util.ByteString, akka.util.ByteString) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder..anonfun.putInts.1 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Timeout akka.util.Timeout durationToTimeout(scala.concurrent.duration.FiniteDuration)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString$ akka.util.ByteString fromArray(byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.getShorts.1 1(akka.util.ByteIterator.MultiByteArrayIterator, java.nio.ByteOrder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString..anon.2 akka.util.ByteStringBuilder apply()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString$ scala.collection.generic.CanBuildFrom&lt;scala.collection.TraversableOnce&lt;java.lang.Object&gt;,java.lang.Object,akka.util.ByteString&gt; canBuildFrom()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Helpers.ConfigOps$ scala.concurrent.duration.FiniteDuration getNanosDuration$extension(com.typesafe.config.Config, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Timeout akka.util.Timeout longToTimeout(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Reflect$ java.lang.reflect.Constructor&lt;T&gt; findConstructor(java.lang.Class&lt;T&gt;, scala.collection.immutable.Seq&lt;java.lang.Object&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings$ akka.util.ByteString apply(scala.collection.immutable.Vector&lt;akka.util.ByteString.ByteString1&gt;, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Timeout$ akka.util.Timeout durationToTimeout(scala.concurrent.duration.FiniteDuration)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder putLongs(long[], java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder..anonfun.putInts.1 void apply(java.nio.ByteBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator akka.util.ByteIterator.MultiByteArrayIterator getInts(int[], int, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Crypt$ java.lang.String hexify(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.BoundedBlockingQueue BoundedBlockingQueue(int, java.util.Queue&lt;E&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator$ akka.util.ByteIterator.ByteArrayIterator empty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator akka.util.ByteIterator clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.WildcardTree..anonfun.1 akka.util.WildcardTree&lt;T&gt; apply()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Helpers.ConfigOps$ scala.concurrent.duration.FiniteDuration akka$util$Helpers$ConfigOps$$getDuration$extension(com.typesafe.config.Config, java.lang.String, java.util.concurrent.TimeUnit) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder putByteArrayUnsafe(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString$ akka.util.ByteString fromString(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator akka.util.ByteIterator $plus$plus(scala.collection.TraversableOnce&lt;java.lang.Object&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.WildcardTree..anonfun.2 2(akka.util.WildcardTree&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator akka.util.ByteIterator getBytes(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.foreach.1 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Crypt$ java.lang.String hex()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator akka.util.ByteIterator $plus$plus(scala.collection.TraversableOnce&lt;java.lang.Object&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.BoundedBlockingQueue java.util.Queue&lt;E&gt; akka$util$BoundedBlockingQueue$$backing()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.BoundedBlockingQueue boolean contains(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.foreach.1 void apply(akka.util.ByteIterator.ByteArrayIterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder putBytes(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString$ akka.util.ByteString empty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator akka.util.ByteIterator.ByteArrayIterator take(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.CompactByteString$ akka.util.CompactByteString apply(scala.collection.Seq&lt;T&gt;, scala.math.Integral&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteString1C akka.util.ByteString $plus$plus(akka.util.ByteString)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteString1 akka.util.ByteString $plus$plus(akka.util.ByteString) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings$ akka.util.ByteString apply(akka.util.ByteString.ByteString1, akka.util.ByteString.ByteStrings) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.4 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator akka.util.ByteIterator.ByteArrayIterator clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Reflect$ java.lang.reflect.Constructor&lt;T&gt; findConstructor(java.lang.Class&lt;T&gt;, scala.collection.immutable.Seq&lt;java.lang.Object&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator$ akka.util.ByteIterator.ByteArrayIterator apply(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.getInts.1 1(akka.util.ByteIterator.MultiByteArrayIterator, java.nio.ByteOrder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString$ akka.util.ByteString fromString(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings..anonfun.asByteBuffers.1 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.CompactByteString$ akka.util.CompactByteString apply(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.3 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.integrate.2 scala.Tuple2&lt;K,scala.collection.immutable.Set&lt;V&gt;&gt; apply(akka.util.SubclassifiedIndex.Nonroot&lt;K,V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.innerFindValues.1 1(akka.util.SubclassifiedIndex&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.getLongs.1 1(akka.util.ByteIterator.MultiByteArrayIterator, java.nio.ByteOrder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings$ akka.util.ByteString apply(akka.util.ByteString.ByteString1, akka.util.ByteString.ByteStrings) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator akka.util.ByteIterator $plus$plus(scala.collection.TraversableOnce&lt;java.lang.Object&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.foreach.mCc.sp.1 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder putFloats(float[], java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Crypt java.lang.String md5(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator$ MODULE$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator akka.util.ByteIterator takeWhile(scala.Function1&lt;java.lang.Object,java.lang.Object&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.foreach.mCc.sp.1 void apply(akka.util.ByteIterator.ByteArrayIterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString$ akka.util.ByteString apply(scala.collection.Seq&lt;java.lang.Object&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator..anonfun.getLongPart.2 2(akka.util.ByteIterator, scala.runtime.LongRef) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.4 4(akka.util.SubclassifiedIndex&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.foreach.mVc.sp.1 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Helpers$ java.util.regex.Pattern makePattern(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator akka.util.ByteIterator.MultiByteArrayIterator getToArray(java.lang.Object, int, int, int, scala.Function0&lt;A&gt;, scala.Function3&lt;java.lang.Object,java.lang.Object,java.lang.Object,scala.runtime.BoxedUnit&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Timeout java.lang.String productPrefix()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator scala.collection.Iterator takeWhile(scala.Function1)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings scala.collection.immutable.Vector&lt;akka.util.ByteString.ByteString1&gt; bytestrings()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex.Nonroot..anonfun.2 scala.collection.immutable.Seq&lt;scala.Tuple2&lt;K,scala.collection.immutable.Set&lt;V&gt;&gt;&gt; apply(akka.util.SubclassifiedIndex.Nonroot&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Helpers java.lang.String base64(long, java.lang.StringBuilder) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.innerFindValues.1 java.lang.Object apply(java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Subclassification boolean isSubclass(K, K) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.len.1 int apply(int, akka.util.ByteIterator.ByteArrayIterator) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator$ akka.util.ByteIterator.ByteArrayIterator apply(byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder $plus$plus$eq(scala.collection.TraversableOnce&lt;java.lang.Object&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.6 6(akka.util.SubclassifiedIndex&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator akka.util.ByteIterator.ByteArrayIterator getLongs(long[], int, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Crypt$ java.lang.String sha1(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator akka.util.ByteIterator take(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='akka.util.ByteString$ akka.util.ByteString fromArray(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator$ MODULE$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator akka.util.ByteIterator getBytes(byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='akka.util.ByteString.ByteStrings$ akka.util.ByteString apply(scala.collection.immutable.Vector&lt;akka.util.ByteString.ByteString1&gt;, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteString1C$ MODULE$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder..anonfun.putInt.1 java.lang.Object apply(java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.foreach.mVc.sp.1 void apply(akka.util.ByteIterator.ByteArrayIterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder putFloats(float[], java.nio.ByteOrder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator akka.util.ByteIterator getInts(int[], int, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Reflect$ T instantiate(java.lang.reflect.Constructor&lt;T&gt;, scala.collection.immutable.Seq&lt;java.lang.Object&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator scala.collection.Iterator drop(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings$ MODULE$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Helpers.ConfigOps$ scala.concurrent.duration.FiniteDuration getMillisDuration$extension(com.typesafe.config.Config, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.removeValue.1 scala.Tuple2&lt;K,scala.collection.immutable.Set&lt;V&gt;&gt; apply(scala.Tuple2&lt;K,scala.collection.immutable.Set&lt;V&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.CompactByteString$ akka.util.CompactByteString apply(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator akka.util.ByteIterator getLongs(long[], int, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Crypt$ java.lang.String md5(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.foreach.mDc.sp.1 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Reflect$ T instantiate(java.lang.reflect.Constructor&lt;T&gt;, scala.collection.immutable.Seq&lt;java.lang.Object&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator akka.util.ByteIterator getShorts(short[], int, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator akka.util.ByteIterator getShorts(short[], int, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.getBytes.2 2(akka.util.ByteIterator.MultiByteArrayIterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Index..anonfun.foreach.1 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator akka.util.ByteIterator getShorts(short[], int, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString akka.util.ByteString fromByteBuffer(java.nio.ByteBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteString1C$ akka.util.ByteString.ByteString1C apply(byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator scala.collection.Iterator dropWhile(scala.Function1)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator akka.util.ByteIterator dropWhile(scala.Function1)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Reflect$ MODULE$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder putInts(int[], java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator akka.util.ByteIterator.MultiByteArrayIterator getDoubles(double[], int, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator akka.util.ByteIterator getShorts(short[], java.nio.ByteOrder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.removeValue.1 java.lang.Object apply(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator scala.collection.Iterator drop(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString..anon.2 scala.collection.mutable.Builder apply()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString$ MODULE$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator akka.util.ByteIterator getDoubles(double[], int, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator akka.util.ByteIterator.ByteArrayIterator getShorts(short[], int, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteString1 akka.util.CompactByteString compact()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator scala.collection.Iterator take(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString$ akka.util.ByteString apply(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator akka.util.ByteIterator.MultiByteArrayIterator $plus$plus$colon(akka.util.ByteIterator.ByteArrayIterator)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Collections.EmptyImmutableSeq$ MODULE$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString$ akka.util.ByteString apply(scala.collection.Seq&lt;java.lang.Object&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator scala.collection.Iterator dropWhile(scala.Function1)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='akka.util.ByteString.ByteStrings$ akka.util.ByteString apply(akka.util.ByteString.ByteStrings, akka.util.ByteString.ByteString1)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString$ akka.util.ByteString fromByteBuffer(java.nio.ByteBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator akka.util.ByteIterator getFloats(float[], java.nio.ByteOrder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Reflect$ scala.Function0&lt;T&gt; instantiator(java.lang.Class&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings..anonfun.apply.3 int apply(int, akka.util.ByteString.ByteString1) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SerializedSuspendableExecutionContext akka.util.SerializedSuspendableExecutionContext apply(int, scala.concurrent.ExecutionContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.1 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.BoundedBlockingQueue boolean remove(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.WildcardTree akka.util.WildcardTree&lt;T&gt; find(scala.collection.Iterator&lt;java.lang.String&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Crypt java.lang.String sha1(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Timeout akka.util.Timeout intToTimeout(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Index..anonfun.values.1 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Timeout$ akka.util.Timeout intToTimeout(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.removeValue.2 scala.collection.immutable.Seq&lt;scala.Tuple2&lt;K,scala.collection.immutable.Set&lt;V&gt;&gt;&gt; apply(akka.util.SubclassifiedIndex.Nonroot&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator akka.util.ByteIterator.ByteArrayIterator drop(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings..anonfun.apply.3 java.lang.Object apply(java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder append(akka.util.ByteString)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString$ akka.util.ByteString fromArray(byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings akka.util.ByteString $plus$plus(akka.util.ByteString)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder putDoubles(double[], java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.len.1 java.lang.Object apply(java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator akka.util.ByteIterator getBytes(byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.BoundedBlockingQueue boolean offer(E, long, java.util.concurrent.TimeUnit) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator akka.util.ByteIterator getLongs(long[], java.nio.ByteOrder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder fillByteBuffer(int, java.nio.ByteOrder, scala.Function1&lt;java.nio.ByteBuffer,scala.runtime.BoxedUnit&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.integrate.1 java.lang.Object apply(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder..anonfun.putLongPart.1..anonfun.apply.1 1(akka.util.ByteStringBuilder..anonfun.putLongPart.1, int, byte[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder putFloats(float[], int, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.CompactByteString akka.util.CompactByteString fromArray(byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString$ akka.util.ByteString apply(java.nio.ByteBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.HashCode int hash(int, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex$ MODULE$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator scala.collection.Iterator take(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='akka.util.BoundedBlockingQueue int drainTo(java.util.Collection&lt;? super E&gt;, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.foreach.mSc.sp.1 void apply(akka.util.ByteIterator.ByteArrayIterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder putShorts(short[], java.nio.ByteOrder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.2 java.lang.Object apply(java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.removeValue.2 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteString1$ MODULE$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Switch$ MODULE$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.CompactByteString akka.util.CompactByteString compact()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder putLong(long, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString akka.util.ByteString fromString(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder putShort(int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.CompactByteString$ akka.util.CompactByteString apply(java.nio.ByteBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.getFloats.2 2(akka.util.ByteIterator.MultiByteArrayIterator, java.nio.ByteOrder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Timeout akka.util.Timeout apply(long, java.util.concurrent.TimeUnit)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Crypt$ MODULE$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.WildcardTree akka.util.WildcardTree&lt;T&gt; apply()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.2 java.lang.Object apply(java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Collections.EmptyImmutableSeq$ java.lang.String productPrefix()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.BoundedBlockingQueue boolean offer(E, long, java.util.concurrent.TimeUnit) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString..anon.2 scala.collection.mutable.Builder apply(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString akka.util.ByteString fromString(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator int copyToBuffer(java.nio.ByteBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.foreach.mDc.sp.1 void apply(akka.util.ByteIterator.ByteArrayIterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator akka.util.ByteIterator clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='akka.util.Timeout$ akka.util.Timeout apply(long, java.util.concurrent.TimeUnit)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.BoundedBlockingQueue java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.2 akka.util.ByteString apply(akka.util.ByteString, akka.util.ByteIterator.ByteArrayIterator) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator akka.util.ByteIterator take(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.WildcardTree akka.util.WildcardTree&lt;T&gt; copy(scala.Option&lt;T&gt;, scala.collection.immutable.Map&lt;java.lang.String,akka.util.WildcardTree&lt;T&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.WildcardTree$ MODULE$'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator akka.util.ByteIterator.MultiByteArrayIterator getFloats(float[], int, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator akka.util.ByteIterator $plus$plus(scala.collection.TraversableOnce&lt;java.lang.Object&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.Crypt$ java.lang.String digest(byte[], java.security.MessageDigest) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.6 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.BoundedBlockingQueue void put(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.foreach.mSc.sp.1 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings ByteStrings(scala.collection.immutable.Vector&lt;akka.util.ByteString.ByteString1&gt;, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString$ akka.util.ByteStringBuilder newBuilder()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder akka.util.ByteStringBuilder putDoubles(double[], int, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.SubclassifiedIndex..anonfun.integrate.2 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator java.io.InputStream asInputStream()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString$ akka.util.ByteString apply(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteString1$ akka.util.ByteString.ByteString1 apply(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString scala.Tuple2&lt;akka.util.ByteString,akka.util.ByteString&gt; splitAt(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator..anonfun.2 akka.util.ByteString apply(akka.util.ByteString, akka.util.ByteIterator.ByteArrayIterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteString.ByteStrings..anonfun.iterator.1 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.ByteArrayIterator..anon.1 int read(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.BoundedBlockingQueue E poll(long, java.util.concurrent.TimeUnit) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.CompactByteString$ akka.util.CompactByteString fromArray(byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteStringBuilder..anonfun.putLong.1 void apply(byte[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator akka.util.ByteIterator getFloats(float[], int, int, java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator akka.util.ByteIterator drop(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='akka.util.ByteString.ByteStrings$ akka.util.ByteString apply(akka.util.ByteString.ByteStrings, akka.util.ByteString.ByteStrings)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.BoundedBlockingQueue int drainTo(java.util.Collection&lt;? super E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='akka.util.ByteIterator.MultiByteArrayIterator$ akka.util.ByteIterator.MultiByteArrayIterator apply(scala.collection.LinearSeq&lt;akka.util.ByteIterator.ByteArrayIterator&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
