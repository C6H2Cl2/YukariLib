<root>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.transform.5..anonfun.2 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.collection.immutable.List cpsParamAnnotation(scala.tools.selectivecps.CPSUtils, scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.Option getAnswerTypeAnn(scala.tools.selectivecps.CPSUtils, scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.4 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.3 3(scala.tools.selectivecps.CPSAnnotationChecker.plugin$, scala.collection.immutable.List) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.8 scala.reflect.internal.Trees.CaseDef apply(scala.reflect.internal.Trees.CaseDef) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSPlugin..anon.1 scala.tools.nsc.Global global()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.transInlineStm.2 2(scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer, scala.reflect.internal.Trees.ValDef) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSTransform.CPSTransformer scala.Tuple2&lt;scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;,scala.reflect.internal.Trees.Tree&gt; transBlock(scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;, scala.reflect.internal.Trees.Tree)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.checker$ checker$(scala.tools.selectivecps.CPSAnnotationChecker) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.updateAttributesFromChildren.4 scala.reflect.internal.Trees.Tree apply(scala.reflect.internal.Trees.Tree) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSTransform.CPSTransformer CPSTransformer(scala.tools.selectivecps.SelectiveCPSTransform, scala.tools.nsc.CompilationUnits.CompilationUnit) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils scala.reflect.internal.Types.Type removeAttribs(scala.reflect.internal.Types.Type, scala.collection.Seq&lt;scala.reflect.internal.Symbols.Symbol&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.canAdaptAnnotations.5 java.lang.String apply()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.reflect.internal.AnnotationInfos.AnnotationInfo newMinusMarker(scala.tools.selectivecps.CPSUtils) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSTransform java.lang.String description()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer scala.Tuple2&lt;scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;,scala.reflect.internal.Trees.Tree&gt; transTailValue(scala.reflect.internal.Trees.Tree, scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;, scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.9 9(scala.tools.selectivecps.CPSAnnotationChecker.plugin$) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer.RemoveTailReturnsTransformer$ RemoveTailReturnsTransformer$(scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSTransform scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt; cpsParamTypes(scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSTransform scala.tools.nsc.ast.Trees.Transformer newTransformer(scala.tools.nsc.CompilationUnits.CompilationUnit)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.Tuple2 annTypes(scala.tools.selectivecps.CPSUtils, scala.reflect.internal.AnnotationInfos.AnnotationInfo) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.11 scala.reflect.internal.Trees.CaseDef apply(scala.Tuple2&lt;scala.reflect.internal.Trees.CaseDef,scala.reflect.internal.Trees.Tree&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.pluginsTyped.10 10(scala.tools.selectivecps.CPSAnnotationChecker.plugin$) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.11 11(scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker scala.reflect.internal.Types.Type removeAttribs(scala.reflect.internal.Types.Type, scala.collection.Seq&lt;scala.reflect.internal.Symbols.Symbol&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.7 java.lang.Object apply(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer scala.Tuple3&lt;scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;,scala.reflect.internal.Trees.Tree,scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;&gt; transValue(scala.reflect.internal.Trees.Tree, scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;, scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.Option cpsParamTypes(scala.tools.selectivecps.CPSUtils, scala.reflect.internal.Types.Type) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.updateAttributesFromChildren.4 4(scala.tools.selectivecps.CPSAnnotationChecker.plugin$) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.adaptAnnotations.2 2(scala.tools.selectivecps.CPSAnnotationChecker.plugin$) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin$ scala.collection.immutable.List&lt;scala.reflect.internal.AnnotationInfos.AnnotationInfo&gt; emptyOrSingleList(scala.collection.immutable.List&lt;scala.reflect.internal.AnnotationInfos.AnnotationInfo&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.transBlock.1 1(scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSPlugin..anon.3 scala.tools.nsc.Global global()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.checker$ scala.reflect.internal.Types.Type addMinusMarker(scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.6 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.checker$ scala.reflect.internal.Types.Type cleanPlus(scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.reflect.internal.Symbols.ClassSymbol MarkerCPSSym(scala.tools.selectivecps.CPSUtils) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.updateAttributesFromChildren.2 2(scala.tools.selectivecps.CPSAnnotationChecker.plugin$) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSTransform.CPSTransformer..anonfun.mainTransform.10 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.updateAttributesFromChildren.3 scala.tools.selectivecps.CPSAnnotationChecker.plugin$ scala$tools$selectivecps$CPSAnnotationChecker$plugin$$anonfun$$$outer()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer scala.Tuple3&lt;scala.collection.immutable.List&lt;scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;&gt;,scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;,scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;&gt; transArgList(scala.reflect.internal.Trees.Tree, scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;, scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSTransform scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt; annTypes(scala.reflect.internal.AnnotationInfos.AnnotationInfo) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt; annTypes(scala.reflect.internal.AnnotationInfos.AnnotationInfo) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSPlugin scala.tools.nsc.Global global()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.canAdaptAnnotations.3 java.lang.String apply()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.transArgList.1 1(scala.tools.selectivecps.CPSAnnotationChecker.plugin$) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker boolean hasCpsParamTypes(scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform scala.reflect.internal.AnnotationInfos.AnnotationInfo newMarker(scala.reflect.internal.Symbols.Symbol) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSPlugin..anon.2 2(scala.tools.selectivecps.SelectiveCPSPlugin) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform boolean hasCpsParamTypes(scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt; cpsParamTypes(scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSPlugin scala.tools.selectivecps.SelectiveANFTransform anfPhase()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin$ scala.reflect.internal.Types.Type transChildrenInOrder(scala.reflect.internal.Trees.Tree, scala.reflect.internal.Types.Type, scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;, scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils..anonfun.linearize.1 1(scala.tools.selectivecps.CPSUtils) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.transTailValue.5 5(scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSTransform scala.reflect.internal.Types.Type removeAttribs(scala.reflect.internal.Types.Type, scala.collection.Seq&lt;scala.reflect.internal.Symbols.Symbol&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker scala.reflect.internal.AnnotationInfos.AnnotationInfo newMarker(scala.reflect.internal.Symbols.Symbol) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils..anonfun.getAnswerTypeAnn.1 1(scala.tools.selectivecps.CPSUtils, scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.4 scala.reflect.internal.Types.Type apply(scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.updateAttributesFromChildren.3..anonfun.apply.1 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.7 scala.Tuple2&lt;scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;,scala.reflect.internal.Trees.Tree&gt; apply(scala.Tuple2&lt;scala.reflect.internal.Trees.Tree,scala.reflect.internal.Types.Type&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.4 4(scala.tools.selectivecps.CPSAnnotationChecker.plugin$) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.9 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.reflect.internal.Symbols.ClassSymbol MarkerCPSAdaptMinus(scala.tools.selectivecps.CPSUtils) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.canAdaptAnnotations.2 java.lang.Object apply(java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform boolean hasMinusMarker(scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class void vprintln(scala.tools.selectivecps.CPSUtils, scala.Function0) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.reflect.internal.AnnotationInfos.AnnotationInfo newSynthMarker(scala.tools.selectivecps.CPSUtils) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSTransform..anonfun.transformCPSType.1 1(scala.tools.selectivecps.SelectiveCPSTransform) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.8 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.canAdaptAnnotations.2 boolean apply(scala.reflect.internal.AnnotationInfos.AnnotationInfo, scala.reflect.internal.AnnotationInfos.AnnotationInfo) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSTransform.CPSTransformer..anonfun.transBlock.4 4(scala.tools.selectivecps.SelectiveCPSTransform.CPSTransformer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.10 scala.reflect.internal.Trees.Tree apply(scala.reflect.internal.Trees.CaseDef) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.reflect.internal.Symbols.Symbol MethShiftUnitR(scala.tools.selectivecps.CPSUtils) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.checker..anonfun.2 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.10 scala.Tuple2&lt;scala.reflect.internal.Trees.CaseDef,scala.reflect.internal.Trees.Tree&gt; apply(scala.reflect.internal.Trees.CaseDef)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSTransform.CPSTransformer..anonfun.mainTransform.3 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.transform.5..anonfun.2 scala.reflect.internal.Trees.Tree apply(scala.reflect.internal.Trees.Tree) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.10 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.5 5(scala.tools.selectivecps.CPSAnnotationChecker.plugin$) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.transform.5..anonfun.1 1(scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.transform.5, scala.Option, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker scala.reflect.internal.AnnotationInfos.AnnotationInfo linearize(scala.collection.immutable.List&lt;scala.reflect.internal.AnnotationInfos.AnnotationInfo&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt; cpsParamTypes(scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin$ scala.reflect.internal.Types.Type updateAttributesFromChildren(scala.reflect.internal.Types.Type, scala.collection.immutable.List&lt;scala.reflect.internal.AnnotationInfos.AnnotationInfo&gt;, scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer scala.Tuple3&lt;scala.collection.immutable.List&lt;scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;&gt;,scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;,scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;&gt; transArgList(scala.reflect.internal.Trees.Tree, scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;, scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;, boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.canAdaptAnnotations.2 java.lang.Object apply(java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform scala.reflect.internal.Types.Type removeAttribs(scala.reflect.internal.Types.Type, scala.collection.Seq&lt;scala.reflect.internal.Symbols.Symbol&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.checker$ scala.tools.selectivecps.CPSAnnotationChecker scala$tools$selectivecps$CPSAnnotationChecker$checker$$$outer()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSPlugin scala.Option&lt;java.lang.String&gt; optionsHelp()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.canAdaptAnnotations.4 java.lang.Object apply()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.checker$ scala.reflect.internal.Types.Type cleanPlusWith(scala.reflect.internal.Types.Type, scala.collection.Seq&lt;scala.reflect.internal.AnnotationInfos.AnnotationInfo&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class void $init$(scala.tools.selectivecps.CPSUtils) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSPlugin..anon.3 3(scala.tools.selectivecps.SelectiveCPSPlugin) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.8 scala.collection.immutable.List&lt;scala.reflect.internal.AnnotationInfos.AnnotationInfo&gt; apply(scala.reflect.internal.Trees.Tree) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.updateAttributesFromChildren.3..anonfun.apply.1 scala.reflect.internal.Types.Type apply(scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSTransform boolean hasCpsParamTypes(scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.pluginsTyped.11 11(scala.tools.selectivecps.CPSAnnotationChecker.plugin$) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.reflect.internal.Symbols.ClassSymbol MarkerCPSAdaptPlus(scala.tools.selectivecps.CPSUtils) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.reflect.internal.Symbols.ModuleSymbol ModCPS(scala.tools.selectivecps.CPSUtils) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin$ scala.collection.immutable.List scala$tools$selectivecps$CPSAnnotationChecker$plugin$$inspect$1(scala.reflect.internal.Trees.Tree) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.checker..anonfun.annotationsConform.2 boolean apply(scala.reflect.internal.AnnotationInfos.AnnotationInfo, scala.reflect.internal.AnnotationInfos.AnnotationInfo) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer scala.Tuple3&lt;scala.collection.immutable.List&lt;scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;&gt;,scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;,scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;&gt; transArgList(scala.reflect.internal.Trees.Tree, scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;, scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSTransform scala.reflect.internal.AnnotationInfos.AnnotationInfo newMarker(scala.reflect.internal.Symbols.Symbol) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.canAdaptAnnotations.5 java.lang.Object apply()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform java.lang.String description()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin$ scala.reflect.internal.Types.Type pluginsTypedReturn(scala.reflect.internal.Types.Type, scala.tools.nsc.typechecker.Typers.Typer, scala.reflect.internal.Trees.Return, scala.reflect.internal.Types.Type) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.checker$ scala.reflect.internal.Types.Type cleanPlusWith(scala.reflect.internal.Types.Type, scala.collection.Seq&lt;scala.reflect.internal.AnnotationInfos.AnnotationInfo&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform boolean hasPlusMarker(scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform scala.tools.nsc.ast.Trees.Transformer newTransformer(scala.tools.nsc.CompilationUnits.CompilationUnit)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSTransform.CPSTransformer..anonfun.transBlock.5 5(scala.tools.selectivecps.SelectiveCPSTransform.CPSTransformer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.transTailValue.3 3(scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.9 scala.collection.immutable.List&lt;scala.reflect.internal.AnnotationInfos.AnnotationInfo&gt; apply(scala.reflect.internal.Trees.Tree) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.Option cpsParamTypes(scala.tools.selectivecps.CPSUtils, scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.reflect.internal.Trees.Tree updateSynthFlag(scala.tools.selectivecps.CPSUtils, scala.reflect.internal.Trees.Tree) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer scala.Tuple2&lt;scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;,scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;&gt; transInlineStm(scala.reflect.internal.Trees.Tree, scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.checker..anonfun.annotationsConform.2 java.lang.Object apply(java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.reflect.internal.AnnotationInfos.AnnotationInfo newMarker(scala.tools.selectivecps.CPSUtils, scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer scala.Tuple2&lt;scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;,scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;&gt; transInlineStm(scala.reflect.internal.Trees.Tree, scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSTransform.CPSTransformer..anonfun.mainTransform.4 4(scala.tools.selectivecps.SelectiveCPSTransform.CPSTransformer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.updateAttributesFromChildren.4 scala.tools.selectivecps.CPSAnnotationChecker.plugin$ scala$tools$selectivecps$CPSAnnotationChecker$plugin$$anonfun$$$outer()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.reflect.internal.Trees.Tree updateSynthFlag(scala.tools.selectivecps.CPSUtils, scala.reflect.internal.Trees.Tree) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.12 scala.Tuple3&lt;scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;,scala.reflect.internal.Trees.Tree,scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;&gt; apply()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils..anonfun.updateSynthFlag.2 2(scala.tools.selectivecps.CPSUtils) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer scala.Tuple3&lt;scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;,scala.reflect.internal.Trees.Tree,scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;&gt; transInlineValue(scala.reflect.internal.Trees.Tree, scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.collection.immutable.List allCPSAnnotations(scala.tools.selectivecps.CPSUtils) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.updateAttributesFromChildren.4..anonfun.apply.2 scala.reflect.internal.Types.Type apply(scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.12 java.lang.Object apply()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer scala.reflect.internal.Trees.Tree transExpr(scala.reflect.internal.Trees.Tree, scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;, scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;, boolean) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.canAdaptAnnotations.2 boolean apply(scala.reflect.internal.AnnotationInfos.AnnotationInfo, scala.reflect.internal.AnnotationInfos.AnnotationInfo) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin$ plugin$(scala.tools.selectivecps.CPSAnnotationChecker) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.reflect.internal.Types.Type removeAllCPSAnnotations(scala.tools.selectivecps.CPSUtils, scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.transform.5..anonfun.1 scala.reflect.internal.Trees.CaseDef apply(scala.reflect.internal.Trees.CaseDef) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.checker..anonfun.annotationsConform.2 java.lang.Object apply(java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt; annTypes(scala.reflect.internal.AnnotationInfos.AnnotationInfo) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.7 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.reflect.internal.Symbols.Symbol MethReifyR(scala.tools.selectivecps.CPSUtils) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils..anonfun.filterAttribs.1 boolean apply(scala.reflect.internal.AnnotationInfos.AnnotationInfo) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class boolean hasPlusMarker(scala.tools.selectivecps.CPSUtils, scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils..anonfun.getExternalAnswerTypeAnn.1 1(scala.tools.selectivecps.CPSUtils, scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.3 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.pluginsTyped.7 scala.reflect.internal.Trees.Tree apply(scala.reflect.internal.Trees.CaseDef) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSPlugin java.lang.String name()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.12 12(scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer, scala.Option, boolean, scala.reflect.internal.Trees.Tree) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.10 scala.Tuple2&lt;scala.reflect.internal.Trees.CaseDef,scala.reflect.internal.Trees.Tree&gt; apply(scala.reflect.internal.Trees.CaseDef) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.canAdaptAnnotations.6 java.lang.String apply()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin$ scala.collection.immutable.List&lt;scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;&gt; transArgList(scala.reflect.internal.Trees.Tree, scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class boolean hasPlusMarker(scala.tools.selectivecps.CPSUtils, scala.reflect.internal.Types.Type) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.reflect.internal.AnnotationInfos.AnnotationInfo newPlusMarker(scala.tools.selectivecps.CPSUtils) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils boolean hasSynthMarker(scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.5 scala.reflect.internal.Types.Type apply(scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSTransform.CPSTransformer..anonfun.mainTransform.3 scala.reflect.internal.Types.Type apply(scala.reflect.internal.Trees.Tree) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSTransform scala.collection.immutable.List&lt;scala.reflect.internal.AnnotationInfos.AnnotationInfo&gt; filterAttribs(scala.reflect.internal.Types.Type, scala.reflect.internal.Symbols.Symbol) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin$ scala.reflect.internal.Types.Type transChildrenInOrder(scala.reflect.internal.Trees.Tree, scala.reflect.internal.Types.Type, scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;, scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.5 5(scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.7 scala.Tuple2&lt;scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;,scala.reflect.internal.Trees.Tree&gt; apply(scala.Tuple2&lt;scala.reflect.internal.Trees.Tree,scala.reflect.internal.Types.Type&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSTransform.CPSTransformer..anonfun.1 1(scala.tools.selectivecps.SelectiveCPSTransform.CPSTransformer, scala.reflect.internal.Trees.Tree) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSTransform scala.reflect.internal.Trees.Tree updateSynthFlag(scala.reflect.internal.Trees.Tree) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.transBlock.1 boolean apply(scala.reflect.internal.Trees.Tree) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSPlugin boolean init(scala.collection.immutable.List&lt;java.lang.String&gt;, scala.Function1&lt;java.lang.String,scala.runtime.BoxedUnit&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSTransform boolean hasMinusMarker(scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils..anonfun.cpsParamTypes.1 1(scala.tools.selectivecps.CPSUtils) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils scala.reflect.internal.Trees.Tree updateSynthFlag(scala.reflect.internal.Trees.Tree) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.5 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.checker..anonfun.annotationsConform.2 boolean apply(scala.reflect.internal.AnnotationInfos.AnnotationInfo, scala.reflect.internal.AnnotationInfos.AnnotationInfo) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSPlugin scala.tools.selectivecps.CPSAnnotationChecker checker()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSTransform.CPSTransformer scala.reflect.internal.Trees.Tree postTransform(scala.reflect.internal.Trees.Tree) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class boolean hasMinusMarker(scala.tools.selectivecps.CPSUtils, scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.transform.5..anonfun.4 4(scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.transform.5) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils scala.collection.immutable.List&lt;scala.reflect.internal.AnnotationInfos.AnnotationInfo&gt; filterAttribs(scala.reflect.internal.Types.Type, scala.reflect.internal.Symbols.Symbol) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer scala.reflect.internal.Trees.Tree transExpr(scala.reflect.internal.Trees.Tree, scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;, scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.3 scala.reflect.internal.Types.Type apply(scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.reflect.internal.Types.Type removeAttribs(scala.tools.selectivecps.CPSUtils, scala.reflect.internal.Types.Type, scala.collection.Seq) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.updateAttributesFromChildren.3..anonfun.apply.1 1(scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.updateAttributesFromChildren.3) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.10 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.transform.5 5(scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer, scala.collection.immutable.List, scala.reflect.internal.Trees.Tree, scala.reflect.internal.Trees.Function) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin$ scala.collection.immutable.List&lt;scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;&gt; transArgList(scala.reflect.internal.Trees.Tree, scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer scala.Tuple2&lt;scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;,scala.reflect.internal.Trees.Tree&gt; transBlock(scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;, scala.reflect.internal.Trees.Tree, scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;, scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;, boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer scala.Tuple3&lt;scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;,scala.reflect.internal.Trees.Tree,scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;&gt; transInlineValue(scala.reflect.internal.Trees.Tree, scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt; annTypes(scala.reflect.internal.AnnotationInfos.AnnotationInfo)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt; annTypes(scala.reflect.internal.AnnotationInfos.AnnotationInfo)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils..anonfun.filterAttribs.1 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSTransform boolean hasPlusMarker(scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.transform.5 scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer scala$tools$selectivecps$SelectiveANFTransform$ANFTransformer$$anonfun$$$outer()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSPlugin..anon.2 scala.tools.nsc.Global global()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.collection.immutable.List filterAttribs(scala.tools.selectivecps.CPSUtils, scala.reflect.internal.Types.Type, scala.reflect.internal.Symbols.Symbol) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.10 10(scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer, scala.Option, scala.Option, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.checker..anonfun.1 1(scala.tools.selectivecps.CPSAnnotationChecker.checker$) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin$ scala.tools.selectivecps.CPSAnnotationChecker scala$tools$selectivecps$CPSAnnotationChecker$plugin$$$outer()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.updateAttributesFromChildren.4..anonfun.apply.2 2(scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.updateAttributesFromChildren.4) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker scala.collection.immutable.List&lt;scala.reflect.internal.AnnotationInfos.AnnotationInfo&gt; filterAttribs(scala.reflect.internal.Types.Type, scala.reflect.internal.Symbols.Symbol) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class boolean hasMinusMarker(scala.tools.selectivecps.CPSUtils, scala.reflect.internal.Types.Type) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils boolean hasMinusMarker(scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.6 boolean apply(scala.reflect.internal.Trees.Tree) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils scala.reflect.internal.AnnotationInfos.AnnotationInfo linearize(scala.collection.immutable.List&lt;scala.reflect.internal.AnnotationInfos.AnnotationInfo&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.8 8(scala.tools.selectivecps.CPSAnnotationChecker.plugin$) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils scala.tools.nsc.Global global()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class boolean hasCpsParamTypes(scala.tools.selectivecps.CPSUtils, scala.reflect.internal.Types.Type) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.reflect.internal.Symbols.Symbol MethShiftUnit0(scala.tools.selectivecps.CPSUtils) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt; annTypes(scala.reflect.internal.AnnotationInfos.AnnotationInfo)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.canAdaptAnnotations.6 java.lang.Object apply()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.reflect.internal.AnnotationInfos.AnnotationInfo newMarker(scala.tools.selectivecps.CPSUtils, scala.reflect.internal.Symbols.Symbol) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils boolean hasPlusMarker(scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.updateAttributesFromChildren.2 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.7 7(scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer, boolean, scala.runtime.ObjectRef) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class boolean hasAnswerTypeAnn(scala.tools.selectivecps.CPSUtils, scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.pluginsTyped.7 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.reflect.internal.AnnotationInfos.AnnotationInfo newCpsParamsMarker(scala.tools.selectivecps.CPSUtils, scala.reflect.internal.Types.Type, scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class boolean hasSynthMarker(scala.tools.selectivecps.CPSUtils, scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSTransform java.lang.String phaseName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform scala.reflect.internal.Trees.Tree updateSynthFlag(scala.reflect.internal.Trees.Tree) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSPlugin java.lang.String description()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker scala.reflect.internal.Trees.Tree updateSynthFlag(scala.reflect.internal.Trees.Tree) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.transform.3 3(scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer, scala.reflect.internal.Trees.Modifiers, scala.reflect.internal.Names.TermName, scala.collection.immutable.List, scala.collection.immutable.List, scala.reflect.internal.Trees.Tree, scala.reflect.internal.Trees.Tree, scala.reflect.internal.Trees.DefDef) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class boolean hasCpsParamTypes(scala.tools.selectivecps.CPSUtils, scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform boolean hasSynthMarker(scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin$ scala.reflect.internal.Types.Type transChildrenInOrder(scala.reflect.internal.Trees.Tree, scala.reflect.internal.Types.Type, scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;, scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSTransform.CPSTransformer..anonfun.mainTransform.10 scala.reflect.internal.Types.Type apply(scala.reflect.internal.Trees.Tree) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker boolean hasSynthMarker(scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.reflect.internal.Symbols.Symbol MethShiftR(scala.tools.selectivecps.CPSUtils) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.7 scala.collection.immutable.List&lt;scala.reflect.internal.AnnotationInfos.AnnotationInfo&gt; apply(scala.reflect.internal.Trees.Tree) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.transBlock.1 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.transArgList.3 3(scala.tools.selectivecps.CPSAnnotationChecker.plugin$) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.updateAttributesFromChildren.4 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer scala.Tuple2&lt;scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;,scala.reflect.internal.Trees.Tree&gt; transBlock(scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;, scala.reflect.internal.Trees.Tree, scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;, scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform scala.collection.immutable.List&lt;scala.reflect.internal.AnnotationInfos.AnnotationInfo&gt; filterAttribs(scala.reflect.internal.Types.Type, scala.reflect.internal.Symbols.Symbol) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSPlugin..anonfun.1 1(scala.tools.selectivecps.SelectiveCPSPlugin) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.checker..anonfun.2 scala.reflect.internal.Types.Type apply(scala.reflect.internal.AnnotationInfos.AnnotationInfo) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class boolean hasSynthMarker(scala.tools.selectivecps.CPSUtils, scala.reflect.internal.Types.Type) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSTransform.CPSTransformer..anonfun.mainTransform.11 11(scala.tools.selectivecps.SelectiveCPSTransform.CPSTransformer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker boolean hasPlusMarker(scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSPlugin..anon.1 1(scala.tools.selectivecps.SelectiveCPSPlugin) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.canAdaptAnnotations.3 java.lang.Object apply()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.updateAttributesFromChildren.4..anonfun.apply.2 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker scala.tools.nsc.Global global()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt; cpsParamTypes(scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.updateAttributesFromChildren.2 boolean apply(scala.reflect.internal.AnnotationInfos.AnnotationInfo) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.reflect.internal.Symbols.ClassSymbol Context(scala.tools.selectivecps.CPSUtils) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.6 6(scala.tools.selectivecps.CPSAnnotationChecker.plugin$) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.8 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSPlugin scala.tools.selectivecps.SelectiveCPSTransform cpsPhase()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.reflect.internal.Symbols.Symbol MethShift(scala.tools.selectivecps.CPSUtils) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.transform.5..anonfun.2 2(scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.transform.5, scala.Option, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker boolean hasMinusMarker(scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform java.lang.String phaseName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.Option getExternalAnswerTypeAnn(scala.tools.selectivecps.CPSUtils, scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer.RemoveTailReturnsTransformer..anonfun.transform.1 1(scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer.RemoveTailReturnsTransformer$) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.reflect.internal.AnnotationInfos.AnnotationInfo newMarker(scala.tools.selectivecps.CPSUtils, scala.reflect.internal.Symbols.Symbol) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.updateAttributesFromChildren.3 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform scala.reflect.internal.AnnotationInfos.AnnotationInfo linearize(scala.collection.immutable.List&lt;scala.reflect.internal.AnnotationInfos.AnnotationInfo&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.7 7(scala.tools.selectivecps.CPSAnnotationChecker.plugin$) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.transform.5..anonfun.3 3(scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.transform.5) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.canAdaptAnnotations.4 java.lang.String apply()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.transArgList.3 scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt; apply(scala.Tuple2&lt;scala.reflect.internal.Trees.Tree,scala.reflect.internal.Types.Type&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.Tuple2 annTypes(scala.tools.selectivecps.CPSUtils, scala.reflect.internal.AnnotationInfos.AnnotationInfo)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils boolean hasCpsParamTypes(scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSTransform scala.reflect.internal.AnnotationInfos.AnnotationInfo linearize(scala.collection.immutable.List&lt;scala.reflect.internal.AnnotationInfos.AnnotationInfo&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.reflect.internal.Symbols.ClassSymbol MarkerCPSTypes(scala.tools.selectivecps.CPSUtils) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils scala.reflect.internal.AnnotationInfos.AnnotationInfo newMarker(scala.reflect.internal.Symbols.Symbol) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSPlugin SelectiveCPSPlugin(scala.tools.nsc.Global) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSTransform boolean hasSynthMarker(scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.7 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.reflect.internal.AnnotationInfos.AnnotationInfo linearize(scala.tools.selectivecps.CPSUtils, scala.collection.immutable.List) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer scala.Tuple2&lt;scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;,scala.reflect.internal.Trees.Tree&gt; transTailValue(scala.reflect.internal.Trees.Tree, scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;, scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.transArgList.3 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt; annTypes(scala.reflect.internal.AnnotationInfos.AnnotationInfo) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.reflect.internal.Symbols.ClassSymbol MarkerCPSSynth(scala.tools.selectivecps.CPSUtils) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.transform.7 7(scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer, scala.reflect.internal.Trees.Modifiers, scala.reflect.internal.Names.TermName, scala.reflect.internal.Trees.Tree, scala.reflect.internal.Trees.Tree, scala.reflect.internal.Trees.ValDef) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSTransform scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt; annTypes(scala.reflect.internal.AnnotationInfos.AnnotationInfo)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.updateAttributesFromChildren.3 3(scala.tools.selectivecps.CPSAnnotationChecker.plugin$) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveCPSTransform.CPSTransformer..anonfun.mainTransform.7 7(scala.tools.selectivecps.SelectiveCPSTransform.CPSTransformer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.cpsNames$ cpsNames$(scala.tools.selectivecps.CPSUtils) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.plugin..anonfun.updateAttributesFromChildren.3 scala.reflect.internal.Trees.Tree apply(scala.reflect.internal.Trees.Tree) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer scala.Tuple3&lt;scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;,scala.reflect.internal.Trees.Tree,scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;&gt; transValue(scala.reflect.internal.Trees.Tree, scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;, scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.8 8(scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer, boolean, scala.Option, scala.Option) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.reflect.internal.Symbols.Symbol MethShiftUnit(scala.tools.selectivecps.CPSUtils) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer scala.Tuple2&lt;scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;,scala.reflect.internal.Trees.Tree&gt; transBlock(scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;, scala.reflect.internal.Trees.Tree, scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;, scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;, boolean) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer scala.Tuple2&lt;scala.collection.immutable.List&lt;scala.reflect.internal.Trees.Tree&gt;,scala.reflect.internal.Trees.Tree&gt; transTailValue(scala.reflect.internal.Trees.Tree, scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;, scala.Option&lt;scala.Tuple2&lt;scala.reflect.internal.Types.Type,scala.reflect.internal.Types.Type&gt;&gt;, boolean) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.10 java.lang.Object apply(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.11 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSAnnotationChecker.checker$ scala.reflect.internal.Types.Type addPlusMarker(scala.reflect.internal.Types.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.reflect.internal.Symbols.Symbol MethReify(scala.tools.selectivecps.CPSUtils) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.SelectiveANFTransform.ANFTransformer..anonfun.transform.5..anonfun.1 java.lang.Object apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='scala.tools.selectivecps.CPSUtils.class scala.reflect.internal.AnnotationInfos.AnnotationInfo linearize(scala.tools.selectivecps.CPSUtils, scala.collection.immutable.List) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
