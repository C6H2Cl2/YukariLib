<root>
    <item name='org.jetbrains.kotlin.annotation.AnnotationWriter void writeAnnotatedField(java.lang.String, java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AbstractAnnotationProcessingExtension AbstractAnnotationProcessingExtension(java.io.File, java.io.File, java.util.List&lt;? extends java.io.File&gt;, boolean, java.io.File, org.jetbrains.kotlin.incremental.components.SourceRetentionAnnotationHandler) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.CompactAnnotationWriter void writeAnnotatedClass(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.ClasspathBasedAnnotationProcessingExtension ClasspathBasedAnnotationProcessingExtension(java.util.List&lt;? extends java.io.File&gt;, java.io.File, java.io.File, java.util.List&lt;? extends java.io.File&gt;, boolean, java.io.File, org.jetbrains.kotlin.incremental.components.SourceRetentionAnnotationHandler) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotatedElement.Field java.lang.String getFieldName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotationProcessorWrapper java.util.Set&lt;java.lang.String&gt; getSupportedAnnotationTypes()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotatedElementKt void writeAnnotatedElement(org.jetbrains.kotlin.annotation.AnnotationWriter, java.lang.String, org.jetbrains.kotlin.annotation.AnnotatedElement) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotationProcessorWrapper java.util.Set&lt;java.lang.String&gt; getSupportedOptions()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.CompactAnnotationWriter void writeAnnotatedField(java.lang.String, java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotatedElement.Method java.lang.String getMethodName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.KotlinAnnotationProvider java.util.Set&lt;java.lang.String&gt; getKotlinClasses()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotationProcessorWrapper boolean process(java.util.Set&lt;? extends javax.lang.model.element.TypeElement&gt;, javax.annotation.processing.RoundEnvironment) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotationWriter void writeAnnotatedField(java.lang.String, java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AbstractAnnotationProcessingExtension AbstractAnnotationProcessingExtension(java.io.File, java.io.File, java.util.List&lt;? extends java.io.File&gt;, boolean, java.io.File, org.jetbrains.kotlin.incremental.components.SourceRetentionAnnotationHandler) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotatedElement.Class Class(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotatedElement.Constructor Constructor(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AbstractAnnotationProcessingExtension java.io.File getGeneratedSourcesOutputDir()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AbstractAnnotationProcessingExtension Companion'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotatedElement.Constructor METHOD_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotatedElementKt void writeAnnotatedElement(org.jetbrains.kotlin.annotation.AnnotationWriter, java.lang.String, org.jetbrains.kotlin.annotation.AnnotatedElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotationProcessorWrapper java.lang.String access$getProcessorFqName$p(org.jetbrains.kotlin.annotation.AnnotationProcessorWrapper) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.CompactAnnotationWriter void writeAnnotatedField(java.lang.String, java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.RoundEnvironmentWrapper RoundEnvironmentWrapper(javax.annotation.processing.ProcessingEnvironment, javax.annotation.processing.RoundEnvironment, int, org.jetbrains.kotlin.annotation.KotlinAnnotationProvider) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotationWriter void writeClassDeclaration(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotatedElement AnnotatedElement(java.lang.String, kotlin.jvm.internal.DefaultConstructorMarker) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AbstractAnnotationProcessingExtension org.jetbrains.kotlin.analyzer.AnalysisResult analysisCompleted(org.jetbrains.kotlin.com.intellij.openapi.project.Project, org.jetbrains.kotlin.descriptors.ModuleDescriptor, org.jetbrains.kotlin.resolve.BindingTrace, java.util.Collection&lt;? extends org.jetbrains.kotlin.psi.KtFile&gt;) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotatedElement.Field Field(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotationWriter void writeAnnotatedClass(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.CompactNotationType SHORTENED_ANNOTATION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotationProcessorWrapper AnnotationProcessorWrapper(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotationProcessorWrapper Companion'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.KotlinAnnotationProvider java.util.LinkedHashMap&lt;java.lang.String,java.util.Set&lt;org.jetbrains.kotlin.annotation.AnnotatedElement&gt;&gt; getAnnotatedKotlinElementsInternal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotationWriter void writeLine(java.lang.String...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.RoundEnvironmentWrapper java.util.Set&lt;? extends javax.lang.model.element.Element&gt; getElementsAnnotatedWith(javax.lang.model.element.TypeElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.MutableKotlinAnnotationProvider void removeClasses(java.util.Set&lt;java.lang.String&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AbstractAnnotationProcessingExtension java.util.List&lt;java.io.File&gt; getJavaSourceRoots()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AbstractAnnotationProcessingExtension org.jetbrains.kotlin.analyzer.AnalysisResult analysisCompleted(org.jetbrains.kotlin.com.intellij.openapi.project.Project, org.jetbrains.kotlin.descriptors.ModuleDescriptor, org.jetbrains.kotlin.resolve.BindingTrace, java.util.Collection&lt;? extends org.jetbrains.kotlin.psi.KtFile&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.CompactAnnotationWriter void writeAnnotatedClass(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotatedElement.Method Method(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotatedElement.Field Field(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AbstractAnnotationProcessingExtension java.io.File getClassesOutputDir()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotationWriter void writeAnnotatedClass(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.RoundEnvironmentWrapper javax.annotation.processing.RoundEnvironment getParent()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotatedElementKt void writeAnnotatedElement(org.jetbrains.kotlin.annotation.AnnotationWriter, java.lang.String, org.jetbrains.kotlin.annotation.AnnotatedElement) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.CompactNotationType SHORTENED_PACKAGE_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.RoundEnvironmentWrapper RoundEnvironmentWrapper(javax.annotation.processing.ProcessingEnvironment, javax.annotation.processing.RoundEnvironment, int, org.jetbrains.kotlin.annotation.KotlinAnnotationProvider) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AbstractAnnotationProcessingExtension org.jetbrains.kotlin.annotation.processing.impl.KotlinMessager access$getMessager$p(org.jetbrains.kotlin.annotation.AbstractAnnotationProcessingExtension)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.MutableKotlinAnnotationProvider void addAnnotationsFrom(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotatedElement.Constructor Companion'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.CompactAnnotationWriter void writeAnnotatedMethod(java.lang.String, java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotationProcessorWrapper java.lang.String access$getProcessorFqName$p(org.jetbrains.kotlin.annotation.AnnotationProcessorWrapper)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AbstractAnnotationProcessingExtension org.jetbrains.kotlin.analyzer.AnalysisResult analysisCompleted(org.jetbrains.kotlin.com.intellij.openapi.project.Project, org.jetbrains.kotlin.descriptors.ModuleDescriptor, org.jetbrains.kotlin.resolve.BindingTrace, java.util.Collection&lt;? extends org.jetbrains.kotlin.psi.KtFile&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotationWriter void writeAnnotatedMethod(java.lang.String, java.lang.String, java.lang.String) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotatedElement.Method Method(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotationProcessorWrapper java.lang.String access$getKAPT_ANNOTATION_OPTION$cp()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotationProcessorWrapper java.lang.Iterable&lt;javax.annotation.processing.Completion&gt; getCompletions(javax.lang.model.element.Element, javax.lang.model.element.AnnotationMirror, javax.lang.model.element.ExecutableElement, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.RoundEnvironmentWrapper RoundEnvironmentWrapper(javax.annotation.processing.ProcessingEnvironment, javax.annotation.processing.RoundEnvironment, int, org.jetbrains.kotlin.annotation.KotlinAnnotationProvider) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AbstractAnnotationProcessingExtension AbstractAnnotationProcessingExtension(java.io.File, java.io.File, java.util.List, boolean, java.io.File, org.jetbrains.kotlin.incremental.components.SourceRetentionAnnotationHandler, int, kotlin.jvm.internal.DefaultConstructorMarker) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.CompactNotationType ANNOTATED_FIELD'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.CompactNotationType CLASS_DECLARATION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotationProcessorWrapper java.lang.String access$getKAPT_SPECIAL_ANNOTATION$cp()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotationProcessorWrapper java.lang.String access$getKAPT_KOTLIN_GENERATED_OPTION$cp()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AbstractAnnotationProcessingExtension org.jetbrains.kotlin.analyzer.AnalysisResult analysisCompleted(org.jetbrains.kotlin.com.intellij.openapi.project.Project, org.jetbrains.kotlin.descriptors.ModuleDescriptor, org.jetbrains.kotlin.resolve.BindingTrace, java.util.Collection&lt;? extends org.jetbrains.kotlin.psi.KtFile&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotatedElement java.lang.String getClassFqName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.CompactAnnotationWriter void writeClassDeclaration(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.ClasspathBasedAnnotationProcessingExtension ClasspathBasedAnnotationProcessingExtension(java.util.List&lt;? extends java.io.File&gt;, java.io.File, java.io.File, java.util.List&lt;? extends java.io.File&gt;, boolean, java.io.File, org.jetbrains.kotlin.incremental.components.SourceRetentionAnnotationHandler) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotationWriter.Companion java.lang.String access$getLINE_SEP$p(org.jetbrains.kotlin.annotation.AnnotationWriter.Companion) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.CompactAnnotationWriter void writeAnnotatedMethod(java.lang.String, java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotationProcessorWrapper AnnotationProcessorWrapper(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotationProcessorWrapper void init(javax.annotation.processing.ProcessingEnvironment) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.RoundEnvironmentWrapper javax.annotation.processing.ProcessingEnvironment getProcessingEnv()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.KotlinAnnotationProvider java.util.LinkedHashSet&lt;java.lang.String&gt; getKotlinClassesInternal()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.KotlinAnnotationProvider void readAnnotations(java.io.Reader) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.RoundEnvironmentWrapper java.util.Set&lt;? extends javax.lang.model.element.Element&gt; getElementsAnnotatedWith(java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.CompactAnnotationWriter CompactAnnotationWriter(java.io.Writer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AbstractAnnotationProcessingExtension java.lang.String access$getLINE_SEPARATOR$cp()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.KotlinAnnotationProvider KotlinAnnotationProvider(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotationWriter void writeAnnotatedMethod(java.lang.String, java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.KotlinAnnotationProvider void writeAnnotations(org.jetbrains.kotlin.annotation.AnnotationWriter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.ClasspathBasedAnnotationProcessingExtension ClasspathBasedAnnotationProcessingExtension(java.util.List&lt;? extends java.io.File&gt;, java.io.File, java.io.File, java.util.List&lt;? extends java.io.File&gt;, boolean, java.io.File, org.jetbrains.kotlin.incremental.components.SourceRetentionAnnotationHandler) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.KotlinAnnotationProvider KotlinAnnotationProvider(java.io.Reader) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AbstractAnnotationProcessingExtension AbstractAnnotationProcessingExtension(java.io.File, java.io.File, java.util.List, boolean, java.io.File, org.jetbrains.kotlin.incremental.components.SourceRetentionAnnotationHandler, int, kotlin.jvm.internal.DefaultConstructorMarker) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.CompactNotationType ANNOTATED_CLASS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AbstractAnnotationProcessingExtension org.jetbrains.kotlin.annotation.processing.impl.KotlinMessager access$getMessager$p(org.jetbrains.kotlin.annotation.AbstractAnnotationProcessingExtension) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotationWriter Companion'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.RoundEnvironmentWrapper java.util.Set&lt;? extends javax.lang.model.element.Element&gt; getElementsAnnotatedWith(javax.lang.model.element.TypeElement)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.CompactAnnotationWriter void writeAnnotatedMethod(java.lang.String, java.lang.String, java.lang.String) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotationWriter void writeAnnotatedField(java.lang.String, java.lang.String, java.lang.String) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AbstractAnnotationProcessingExtension AbstractAnnotationProcessingExtension(java.io.File, java.io.File, java.util.List&lt;? extends java.io.File&gt;, boolean, java.io.File, org.jetbrains.kotlin.incremental.components.SourceRetentionAnnotationHandler) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotationWriter void writeAnnotatedMethod(java.lang.String, java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.CompactNotationType ANNOTATED_METHOD'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.KotlinAnnotationProvider java.util.Map&lt;java.lang.String,java.util.Set&lt;org.jetbrains.kotlin.annotation.AnnotatedElement&gt;&gt; getAnnotatedKotlinElements()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AnnotationWriter AnnotationWriter(java.io.Writer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.ClasspathBasedAnnotationProcessingExtension ClasspathBasedAnnotationProcessingExtension(java.util.List&lt;? extends java.io.File&gt;, java.io.File, java.io.File, java.util.List&lt;? extends java.io.File&gt;, boolean, java.io.File, org.jetbrains.kotlin.incremental.components.SourceRetentionAnnotationHandler) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.ClasspathBasedAnnotationProcessingExtension java.util.List&lt;javax.annotation.processing.Processor&gt; loadAnnotationProcessors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.CompactNotationType INSTANCE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AbstractAnnotationProcessingExtension AbstractAnnotationProcessingExtension(java.io.File, java.io.File, java.util.List, boolean, java.io.File, org.jetbrains.kotlin.incremental.components.SourceRetentionAnnotationHandler, int, kotlin.jvm.internal.DefaultConstructorMarker) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.RoundEnvironmentWrapper org.jetbrains.kotlin.annotation.KotlinAnnotationProvider getKotlinAnnotationsProvider()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.ClasspathBasedAnnotationProcessingExtension java.util.List&lt;java.io.File&gt; getAnnotationProcessingClasspath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.AbstractAnnotationProcessingExtension java.util.List&lt;javax.annotation.processing.Processor&gt; loadAnnotationProcessors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.CompactAnnotationWriter void writeAnnotatedField(java.lang.String, java.lang.String, java.lang.String) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.annotation.RoundEnvironmentWrapper java.util.Set&lt;? extends javax.lang.model.element.Element&gt; getElementsAnnotatedWith(java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
