<root>
    <item name='org.jetbrains.kotlin.java.model.JeName Companion'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeAnnotationOwner.DefaultImpls java.util.List&lt;org.jetbrains.kotlin.java.model.elements.JeAnnotationMirror&gt; getAnnotationMirrors(org.jetbrains.kotlin.java.model.JeAnnotationOwner) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeNoAnnotations java.lang.Void getAnnotation(java.lang.Class&lt;A&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeAnnotationOwner.DefaultImpls A getAnnotation(org.jetbrains.kotlin.java.model.JeAnnotationOwner, java.lang.Class&lt;A&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeNoAnnotations.DefaultImpls A[] getAnnotationsByType(org.jetbrains.kotlin.java.model.JeNoAnnotations, java.lang.Class&lt;A&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeNoAnnotations A[] getAnnotationsByType(java.lang.Class&lt;A&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeAnnotationOwner.DefaultImpls A[] getAnnotationsByType(org.jetbrains.kotlin.java.model.JeAnnotationOwner, java.lang.Class&lt;A&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeAnnotationOwner A[] getAnnotationsByType(java.lang.Class&lt;A&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeName.Companion org.jetbrains.kotlin.java.model.JeName getCLINIT()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeName.Companion org.jetbrains.kotlin.java.model.JeName getEMPTY()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeAnnotationOwner A[] getAnnotationsByType(java.lang.Class&lt;A&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeModifierListOwner org.jetbrains.kotlin.com.intellij.psi.PsiModifierListOwner getPsi()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeNoAnnotations A[] getAnnotationsByType(java.lang.Class&lt;A&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeAnnotationOwner java.util.List&lt;org.jetbrains.kotlin.java.model.elements.JeAnnotationMirror&gt; getAnnotationMirrors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeName JeName(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeName org.jetbrains.kotlin.java.model.JeName access$getINIT$cp()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeAnnotationOwner.DefaultImpls A[] getAnnotationsByType(org.jetbrains.kotlin.java.model.JeAnnotationOwner, java.lang.Class&lt;A&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeName java.lang.String getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeNoAnnotations java.util.List&lt;javax.lang.model.element.AnnotationMirror&gt; getAnnotationMirrors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeName org.jetbrains.kotlin.java.model.JeName access$getEMPTY$cp()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeNoAnnotations.DefaultImpls A[] getAnnotationsByType(org.jetbrains.kotlin.java.model.JeNoAnnotations, java.lang.Class&lt;A&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeAnnotationOwner.DefaultImpls A getAnnotation(org.jetbrains.kotlin.java.model.JeAnnotationOwner, java.lang.Class&lt;A&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeAnnotationOwner org.jetbrains.kotlin.com.intellij.psi.PsiModifierListOwner getPsi()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeModifierListOwner.DefaultImpls java.util.Set&lt;javax.lang.model.element.Modifier&gt; getModifiers(org.jetbrains.kotlin.java.model.JeModifierListOwner)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeAnnotationOwner.DefaultImpls A[] getAnnotationsByType(org.jetbrains.kotlin.java.model.JeAnnotationOwner, java.lang.Class&lt;A&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeAnnotationOwner.DefaultImpls java.util.List&lt;org.jetbrains.kotlin.java.model.elements.JeAnnotationMirror&gt; getAnnotationMirrors(org.jetbrains.kotlin.java.model.JeAnnotationOwner)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeName java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeName java.lang.CharSequence subSequence(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeNoAnnotations.DefaultImpls java.util.List&lt;javax.lang.model.element.AnnotationMirror&gt; getAnnotationMirrors(org.jetbrains.kotlin.java.model.JeNoAnnotations)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeElement org.jetbrains.kotlin.com.intellij.psi.PsiElement getPsi()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeName.Companion org.jetbrains.kotlin.java.model.JeName getINIT()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeNameKt org.jetbrains.kotlin.java.model.JeName JeName(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeModifierListOwner.DefaultImpls java.util.Set&lt;javax.lang.model.element.Modifier&gt; getModifiers(org.jetbrains.kotlin.java.model.JeModifierListOwner) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeName org.jetbrains.kotlin.java.model.JeName access$getCLINIT$cp()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeAnnotationOwner A getAnnotation(java.lang.Class&lt;A&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.jetbrains.kotlin.java.model.JeModifierListOwner java.util.Set&lt;javax.lang.model.element.Modifier&gt; getModifiers()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
